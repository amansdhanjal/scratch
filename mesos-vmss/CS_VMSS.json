{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "region": {
            "type": "string",
            "defaultValue": "West US"
        },
        "linuxAdminUsername": {
            "type": "string",
            "defaultValue": "azureuser",
            "metadata": {
                "description": "User name for the Linux Virtual Machines (SSH or Password)."
            }
        },
        "linuxAdminPassword": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "Password for the Linux Virtual Machine.  Not Required.  If not set, you must provide a SSH key."
            }
        },
        "sshRSAPublicKey": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "SSH public key used for auth to all Linux machines.  Not Required.  If not set, you must provide a password key."
            }
        },
        "windowsAdminUsername": {
            "type": "string",
            "defaultValue": "azureuser",
            "metadata": {
                "description": "User name for the Windows Jumpbox Virtual Machine (Password Only Supported)."
            }
        },
        "windowsAdminPassword": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "Password for the Windows Jumpbox Virtual Machine."
            }
        },
        "dnsprefix": {
            "type": "string",
            "metadata": {
                "description": "Sets the Domain name label for the agent pool IP Address.  The concatenation of the domain name label and the regional DNS zone make up the fully qualified domain name associated with the public IP address."
            }
        },
        "agentCount": {
            "type": "int",
            "defaultValue": 1,
            "metadata": {
                "description": "The number of Mesos agents for the cluster.  This value can be from 1 to 100"
            },
            "allowedValues": [
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43,
                44,
                45,
                46,
                47,
                48,
                49,
                50,
                51,
                52,
                53,
                54,
                55,
                56,
                57,
                58,
                59,
                60,
                61,
                62,
                63,
                64,
                65,
                66,
                67,
                68,
                69,
                70,
                71,
                72,
                73,
                74,
                75,
                76,
                77,
                78,
                79,
                80,
                81,
                82,
                83,
                84,
                85,
                86,
                87,
                88,
                89,
                90,
                91,
                92,
                93,
                94,
                95,
                96,
                97,
                98,
                99,
                100
            ]
        },
        "masterCount": {
            "type": "int",
            "defaultValue": 1,
            "allowedValues": [
                1,
                3,
                5
            ],
            "metadata": {
                "description": "The number of Mesos masters for the cluster."
            }
        },
        "agentVMSize": {
            "type": "string",
            "defaultValue": "Standard_A1",
            "allowedValues": [
                "Standard_A1",
                "Standard_A2",
                "Standard_A3",
                "Standard_A4"
            ],
            "metadata": {
                "description": "The size of the Virtual Machine. Allowable machine values are 1 core (A1), 2 core (A2), 4 core (A3), 8 core (A4)."
            }
        },
        "linuxPublisher": {
            "type": "string",
            "defaultValue": "Canonical",
            "metadata": {
                "description": "This is the publisher of the image used by the linux cluster"
            }
        },
        "linuxOffer": {
            "type": "string",
            "defaultValue": "UbuntuServer",
            "metadata": {
                "description": "This is the offer of the image used by the linux cluster"
            }
        },
        "linuxSku": {
            "type": "string",
            "defaultValue": "14.04.3-LTS",
            "metadata": {
                "description": "This is the linux sku used by the linux cluster"
            }
        },
        "linuxVersion": {
            "type": "string",
            "defaultValue": "latest",
            "metadata": {
                "description": "This is the linux version used by the linux cluster"
            }
        },
        "windowsJumpboxPublisher": {
            "type": "string",
            "defaultValue": "MicrosoftVisualStudio",
            "metadata": {
                "description": "This is the windows publisher used by the windows jumpbox"
            }
        },
        "windowsJumpboxOffer": {
            "type": "string",
            "defaultValue": "VisualStudio",
            "metadata": {
                "description": "This is the windows offer used by the windows jumpbox"
            }
        },
        "windowsJumpboxSku": {
            "type": "string",
            "defaultValue": "VS-2015-Enterprise-AzureSDK-2.7-WS2012R2",
            "metadata": {
                "description": "This is the windows sku used by the windows jumpbox"
            }
        },
        "isValidation": {
            "type": "int",
            "defaultValue": 0,
            "allowedValues": [
                0,
                1
            ],
            "metadata": {
                "description": "This is testing in the validation region"
            }
        },
        "disablePasswordAuthentication": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "This setting controls whether password auth is disabled for Linux VMs provisioned by this template. Default is true which disables password and makes SSH key required."
            }
        },
        "setLinuxConfigurationForVMCreate": {
            "type": "int",
            "defaultValue": 1,
            "allowedValues": [
                0,
                1
            ],
            "metadata": {
                "description": "This setting controls whether Linux configuration with SSH Key is passed in VM PUT Payload.  Defaults to 1.  If SSH Key is blank, this must be set to 0."
            }
        },
        "nameSuffix": {
            "type": "string",
            "defaultValue": "01234567",
            "metadata": {
                "description": "A string to include in the names of resources created.  Defaults to 0.  Can not be blank."
            }
        },
        "vmsPerStorageAccount": {
            "type": "int",
            "defaultValue": 5,
            "metadata": {
                "description": "This specifies the number of VMs per storage accounts"
            }
        },
        "postInstallScriptURI": {
            "type": "string",
            "defaultValue": "disabled",
            "metadata": {
                "description": "After installation, this specifies a script to download and install.  To disabled, set value to 'disabled'."
            }
        }
    },
    "variables": {
        "adminUsername": "[parameters('linuxAdminUsername')]",
        "adminPassword": "[parameters('linuxAdminPassword')]",
        "dnsprefix": "[parameters('dnsprefix')]",
        "masterEndpointDNSNamePrefix": "[concat(variables('dnsprefix'), 'master')]",
        "agentEndpointDNSNamePrefix": "[concat(variables('dnsprefix'), 'agent')]",
        "agentCount": "[parameters('agentCount')]",
        "masterCount": "[parameters('masterCount')]",
        "agentVMSize": "[parameters('agentVMSize')]",
        "sshRSAPublicKey": "[parameters('sshRSAPublicKey')]",
        "linuxPublisher": "[parameters('linuxPublisher')]",
        "linuxOffer": "[parameters('linuxOffer')]",
        "linuxSku": "[parameters('linuxSku')]",
        "linuxVersion": "[parameters('linuxVersion')]",
        "windowsJumpboxPublisher": "[parameters('windowsJumpboxPublisher')]",
        "windowsJumpboxOffer": "[parameters('windowsJumpboxOffer')]",
        "windowsJumpboxSku": "[parameters('windowsJumpboxSku')]",
        "windowsAdminUsername": "[parameters('windowsAdminUsername')]",
        "windowsAdminPassword": "[parameters('windowsAdminPassword')]",
        "vmsPerStorageAccount": "[parameters('vmsPerStorageAccount')]",
        "postInstallScriptURI": "[parameters('postInstallScriptURI')]",
        "nameSuffix": "[parameters('nameSuffix')]",
        "isValidation": "[parameters('isValidation')]",
        "storageLocations": [
            "[resourceGroup().location]",
            "East US 2 (Stage)"
        ],
        "storageLocation": "[variables('storageLocations')[variables('isValidation')]]",
        "sshKeyPath": "[concat('/home/', variables('adminUsername'), '/.ssh/authorized_keys')]",
        "disablePasswordAuthentication": "[parameters('disablePasswordAuthentication')]",
        "setLinuxConfigurationForVMCreate": "[parameters('setLinuxConfigurationForVMCreate')]",
        "linuxConfigurations": [
            {},
            {
                "disablePasswordAuthentication": "[variables('disablePasswordAuthentication')]",
                "ssh": {
                    "publicKeys": [
                        {
                            "path": "[variables('sshKeyPath')]",
                            "keyData": "[variables('sshRSAPublicKey')]"
                        }
                    ]
                }
            }
        ],
        "linuxConfiguration": "[variables('linuxConfigurations')[variables('setLinuxConfigurationForVMCreate')]]",
        "orchestratorName": "mesos",
        "masterPublicIPAddressName": "[concat(variables('orchestratorName'), '-master-ip-', variables('masterEndpointDNSNamePrefix'), '-', variables('nameSuffix'))]",
        "agentPublicIPAddressName": "[concat(variables('orchestratorName'), '-agent-ip-', variables('agentEndpointDNSNamePrefix'), '-', variables('nameSuffix'))]",
        "marathonEnabled": true,
        "chronosEnabled": true,
        "swarmEnabled": false,
        "osImagePublisher": "[variables('linuxPublisher')]",
        "osImageOffer": "[variables('linuxOffer')]",
        "osImageSKU": "[variables('linuxSku')]",
        "osImageVersion": "[variables('linuxVersion')]",
        "virtualNetworkName": "[concat(variables('orchestratorName'), '-vnet-', variables('nameSuffix'))]",
        "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
        "subnetName": "[concat(variables('orchestratorName'), '-subnet')]",
        "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
        "addressPrefix": "10.0.0.0/16",
        "subnetPrefix": "10.0.0.0/18",
        "storageAccountType": "Standard_GRS",
        "storageAccountPrefixes": [
            "0",
            "6",
            "c",
            "i",
            "o",
            "u",
            "1",
            "7",
            "d",
            "j",
            "p",
            "v",
            "2",
            "8",
            "e",
            "k",
            "q",
            "w",
            "3",
            "9",
            "f",
            "l",
            "r",
            "x",
            "4",
            "a",
            "g",
            "m",
            "s",
            "y",
            "5",
            "b",
            "h",
            "n",
            "t",
            "z"
        ],
        "storageAccountPrefixesCount": "[length(variables('storageAccountPrefixes'))]",
        "storageAccountBaseName": "[concat(uniqueString(variables('masterEndpointDNSNamePrefix')), variables('orchestratorName'))]",
        "masterStorageAccountName": "[concat(variables('storageAccountBaseName'), '0')]",
        "omsStorageAccount": "none",
        "omsStorageAccountKey": "none",
        "clusterInstallParameters": "[concat(variables('masterCount'), ' ',variables('masterVMNamePrefix'), ' ',variables('masterFirstAddr'), ' ',variables('swarmEnabled'),' ',variables('marathonEnabled'),' ',variables('chronosEnabled'),' ',variables('omsStorageAccount'),' ',variables('omsStorageAccountKey'),' ', variables('adminUsername'),' ',variables('postInstallScriptURI'))]",
        "setBrowserFirstTabDefaultPrefix": "powershell.exe -ExecutionPolicy Unrestricted -command \"New-Item -Path HKLM:'\\SOFTWARE\\Policies\\Microsoft\\Internet Explorer' ; New-Item -Path HKLM:'\\SOFTWARE\\Policies\\Microsoft\\Internet Explorer\\BrowserEmulation' ; New-ItemProperty -Path HKLM:'\\SOFTWARE\\Policies\\Microsoft\\Internet Explorer\\BrowserEmulation' -Name IntranetCompatibilityMode -Value 0 -Type DWord; New-Item -Path HKLM:'\\SOFTWARE\\Policies\\Microsoft\\Internet Explorer\\Main' ; New-ItemProperty -Path HKLM:'\\SOFTWARE\\Policies\\Microsoft\\Internet Explorer\\Main' -Name 'Start Page' -Type String -Value http://\"",
        "setBrowserFirstTabDefaultSuffix": "0:5050",
        "masterNSGName": "[concat(variables('orchestratorName'), '-master-nsg-', variables('nameSuffix'))]",
        "masterNSGID": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('masterNSGName'))]",
        "masterVMNamePrefix": "[concat(variables('orchestratorName'), '-master-', variables('nameSuffix'), '-')]",
        "masterFirstAddr": 5,
        "masterAvailabilitySet": "[concat(variables('orchestratorName'), '-master-availabilitySet-', variables('nameSuffix'))]",
        "masterLbName": "[concat(variables('orchestratorName'), '-master-lb-', variables('nameSuffix'))]",
        "masterVMSize": "Standard_A1",
        "masterLbID": "[resourceId('Microsoft.Network/loadBalancers',variables('masterLbName'))]",
        "masterLbIPConfigName": "[concat(variables('orchestratorName'), '-master-lbFrontEnd-', variables('nameSuffix'))]",
        "masterLbIPConfigID": "[concat(variables('masterLbID'),'/frontendIPConfigurations/', variables('masterLbIPConfigName'))]",
        "masterLbBackendPoolName": "[concat(variables('orchestratorName'), '-master-pool-', variables('nameSuffix'))]",
        "masterCustomScript": "[concat('/bin/bash -c \"/bin/bash /opt/azure/containers/configure-mesos-cluster.sh ',variables('clusterInstallParameters'),' >> /var/log/azure/cluster-bootstrap.log 2>&1\"')]",
        "agentNSGName": "[concat(variables('orchestratorName'), '-agent-nsg-', variables('nameSuffix'))]",
        "agentNSGID": "[resourceId('Microsoft.Network/networkSecurityGroups',variables('agentNSGName'))]",
        "agentFirstAddr": 20,
        "agentVMNamePrefix": "[concat(variables('orchestratorName'), '-agent-', variables('nameSuffix'), '-')]",
        "agentAvailabilitySet": "[concat(variables('orchestratorName'), '-agent-availabilitySet-', variables('nameSuffix'))]",
        "agentsLbName": "[concat(variables('orchestratorName'), '-agent-lb-', variables('nameSuffix'))]",
        "agentsLbID": "[resourceId('Microsoft.Network/loadBalancers',variables('agentsLbName'))]",
        "agentsLbIPConfigName": "[concat(variables('orchestratorName'), '-agent-lbFrontEnd-', variables('nameSuffix'))]",
        "agentsLbIPConfigID": "[concat(variables('agentsLbID'),'/frontendIPConfigurations/', variables('agentsLbIPConfigName'))]",
        "agentsLbBackendPoolName": "[concat(variables('orchestratorName'), '-agent-pool-', variables('nameSuffix'))]",
        "agentStorageAccountName": "[concat(variables('storageAccountBaseName'),'24563')]",
        "agentStorageAccountsCount": "[add(div(variables('agentCount'), variables('vmsPerStorageAccount')), mod(add(mod(variables('agentCount'), variables('vmsPerStorageAccount')),2), add(mod(variables('agentCount'), variables('vmsPerStorageAccount')),1)))]",
        "agentsPerIPv4Octet": 200,
        "agentCustomScript": "[concat('/usr/bin/nohup /bin/bash -c \"/bin/bash /opt/azure/containers/configure-mesos-cluster.sh ',variables('clusterInstallParameters'),' >> /var/log/azure/cluster-bootstrap.log 2>&1 &\" &')]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('masterStorageAccountName')]",
            "apiVersion": "2015-06-15",
            "location": "[variables('storageLocation')]",
            "properties": {
                "accountType": "[variables('storageAccountType')]"
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('virtualNetworkName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('addressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('subnetPrefix')]"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Compute/availabilitySets",
            "name": "[variables('masterAvailabilitySet')]",
            "location": "[resourceGroup().location]",
            "properties": {}
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('masterPublicIPAddressName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "[variables('masterEndpointDNSNamePrefix')]"
                }
            }
        },
        {
            "apiVersion": "2015-06-15",
            "name": "[variables('masterLbName')]",
            "type": "Microsoft.Network/loadBalancers",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', variables('masterPublicIPAddressName'))]"
            ],
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "[variables('masterLbIPConfigName')]",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('masterPublicIPAddressName'))]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "[variables('masterLbBackendPoolName')]"
                    }
                ]
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/loadBalancers/inboundNatRules",
            "name": "[concat(variables('masterLbName'), '/', 'SSH-', variables('masterVMNamePrefix'), copyIndex())]",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "masterLbLoopNode",
                "count": "[variables('masterCount')]"
            },
            "dependsOn": [
                "[variables('masterLbID')]"
            ],
            "properties": {
                "frontendIPConfiguration": {
                    "id": "[variables('masterLbIPConfigID')]"
                },
                "protocol": "tcp",
                "frontendPort": "[copyIndex(2200)]",
                "backendPort": 22,
                "enableFloatingIP": false
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('masterNSGName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "ssh",
                        "properties": {
                            "description": "Allow SSH",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 200,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('masterVMNamePrefix'), 'nic-', copyIndex())]",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "nicLoopNode",
                "count": "[variables('masterCount')]"
            },
            "dependsOn": [
                "[variables('masterLbID')]",
                "[variables('vnetID')]",
                "[concat(variables('masterLbID'),'/inboundNatRules/SSH-',variables('masterVMNamePrefix'),copyIndex())]",
                "[variables('masterNSGID')]"
            ],
            "properties": {
                "networkSecurityGroup": {
                    "id": "[variables('masterNSGID')]"
                },
                "ipConfigurations": [
                    {
                        "name": "ipConfigNode",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[concat(split(variables('subnetPrefix'),'0/18')[0], copyIndex(variables('masterFirstAddr')))]",
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[concat(variables('masterLbID'), '/backendAddressPools/', variables('masterLbBackendPoolName'))]"
                                }
                            ],
                            "loadBalancerInboundNatRules": [
                                {
                                    "id": "[concat(variables('masterLbID'),'/inboundNatRules/SSH-',variables('masterVMNamePrefix'),copyIndex())]"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(variables('masterVMNamePrefix'), copyIndex())]",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "vmLoopNode",
                "count": "[variables('masterCount')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('masterVMNamePrefix'), 'nic-', copyIndex())]",
                "[concat('Microsoft.Compute/availabilitySets/',variables('masterAvailabilitySet'))]",
                "[variables('masterStorageAccountName')]"
            ],
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('masterAvailabilitySet'))]"
                },
                "hardwareProfile": {
                    "vmSize": "[variables('masterVMSize')]"
                },
                "osProfile": {
                    "computername": "[concat(variables('masterVMNamePrefix'), copyIndex())]",
                    "adminUsername": "[variables('adminUsername')]",
                    "adminPassword": "[variables('adminPassword')]",
                    "customData": "[base64('#cloud-config\n\nwrite_files:\n -  encoding: gzip\n    content: !!binary |\n        H4sIADI2e1YC/+1b/1PbxhL/XX/FVXgKtJZlQ2gSMu4bB0ziCdiMDXltQx7I0hkrliVVJwGG+n9/u/dFX4xsnJTMdOa9zjRId3u7d3t7u5/dkzd+MIeubw4tNta0jW//T9sgB4E/cq+TiJITygJGej4lb4M7DfvOxi4jrs9iy/MYiceUjALPC25d/5rYwTQMfOrHDAgNch8EE0rDiL9MOaepxWIqG6zIiseBn+u1rmHs35o7ozEx7jSN2uOA6DDJKMaJCfa2l6B0mKZYnhW7ga9rjhVTLQTpMG7w71b/5PJjuz/o9LpN3RpPaWyyWyua7jdq9VrduJ8Y4yAeuXe6tqi1U1gQkNOILXSdtAZn7f5B77x71qw8NOay4bTfPur8Bi07quWo0x+ctQ4P+9C4OxeTaXdbb4/bh80rvqTKw4s5+YtYtxOy+RBGrh+TOADt02irUt+eb14Bp37r7H2vuzhu74lxB+/7vW5vsDjslyeGtQ74urqtkzZM+uWc78DPd6r9Q/t3aH41VxvT+uO83z4ftHGFr+faaW9w1unCmo+PBwf9zunZeb+DKqrPtfe9k/Zhp9/UzXEwpWYlHalrH0+4uKtxwGIfVH6FLecnb4GrnLaggJkz6pBNZtZ++vSfuvH688XWJ/7n54vtnyrmRcPcxLFyI5aMvdhKR2//JIersW9bg/bg/G23fdbUG3U0kJqujO+EmzqcpcSP90klZwR6keI0omBPKYmYzQLNkRuxmLQcJ0rpUmNRpDdTVMa+WoFqVroRHfyxStSieWNRYt7qoDv/WiUL1sUnU2ipkqIhAUWxQYnJGQ7Q5N4UQaZb6M9e9FLnxp3WdBr45CjxbTzXrJSM+gzcWuse/unS+DaIJlvb2oNGyAYRXdyjoWERVCYBXxeB7/BurKFHgQx7+ryBvqeWF49nzQY0j4KIuOAVyUOjVmvs1OdviBNAuxigdoQ3uCPyiVT+RQz6J6mTz7wNZPr8AeehrJqMLUaGlPrAPfEd9FrgyxIqCUtmUpddQn/FhYhVUKZLmmFErQl/Hrn8D/PAVRNcjAMuXFMTfSyGGBANxMzTeQuJmTQnoIz4QazEVok1DIQrlqFDzIPeuTGXCZNY3ARf7A/Bfxh0yvcVas+0fnuN7qZnOvTG9BPPI+M4DvdNDJDXNYhSz7oTCxN7vAtqJWBMY0H01C7UF7ehKGP5FiyIwy2QIqvEtnx8d4Jb3wssh4yiYEpQI8t2xx2JSCleQmJle7ajySk/OjdcYYb7Fdu2cFokg3/6Fn3HHZKHhqscPD5l7Fl2KFPu6O/uzuj/u5Mu7tv3Zq6VxCMAPhIDXuVOw5WmuUyAZyIjFl+YXgQNpNmEpjSiF1cY0TiJfILqpR6j+baGmhAwTeW8UUOVarhCHB4ULYnkdQ09t8s4cs8m9phHQdSi+HpBPOe1WrovUgUlPZiyiP6ZuBF18srJowryA2jGB5P4VqXkZCyfm6RgBKjF5O4nuItMTku+NXU9f9CuGD9Ala2tHEg0GtvbV+QNN+TstOkVVyfGdUz0uv74xKXsKw/ycV7V1engf4WA3sEZINYrehdGj9Ak+ZlUwNyQuHPK7RC4ZfBrXnnI8ZgL7iVyKw9i9Hx/p/GqIcg2iJNAoAhkOhZTawrnIaSRS3077+5AgRY4LFAuA58R3IAhOT7j0IIJTqUS80cBXt1MtvQFAuDLAXj87ifijMrtCaEdoDhw5aOUkMqWfNrmjWIIi6Omfj8BUJFNAR4lC64YJS4dgCKXJt3KrzDqjdAqDruDZcTC7CrKU6SIH5OWxAlAs+AzLGLS2DbFWrUSgR3hrchhYE8wJy+XIqnQvVnCdfPcGd8dPpA38xRZ16QDFBylUovxpL4I0owYtp+RF/AE5y6aGSDBh4wowfTLMG4tN+btzcYeMf7sGRzKMVA7jK6JGSCiw6WPnzUqieWLpSjPDlNiiW2DiY4AVa4P42DfYxfTibx+NI1vFiw0mgawVuud0miW7JZ6xA0ywMKG3Diuf88FdwtHxSf7O7sv98iWHxAricdVMkxiVP4NRLVtZZObh72DD+3+Ze/0bNDUjfck8SEBNU3zxorMKPFNqVcGfwh0i8y2zlnrm2VW5tCRlXixHCjc8lKvubFQNgKtUBsRSkSvYR3RDH08mk3vZFA+5UruDYxEMTBSBo3dl7XG7l7t9W7t9doz5jSwGzeuTdVWwKlEXatIXbDsHPa1YjUgwyh887FtKbrazQ4Dl61Y+KPgWU25OI16qYE/glb5GYUM9Pa1OUtB6nLIlU0gh7b0BYSkTsyCC2MQqUNuJoWO5aYnq1OEtE8HZ/1O911TPxSG0PadMHD9mJ1GQRzYgdfkjuZNy7axgtMFLTcrDzlEMVddH+gs6/nQ/n2upztP4DBxx8aNqGl5t9YMVOkU7NOcMkHNj/nNrkpWKw/Crc/FkYZQpybNJciKGhpuaTxR7p2XcMtI+AZbYWxM6Awi7w1MFJ7Q/mHi6VMtGcIaE+5jcSX2DWnv/dLYa7w90g47MJ8exEePDS8j6lGLIVhlcN7iiGx+2k9CiO77nzfxmZcN4XlbO+gdtkXBsDjQhgArbMKhQ6WFiEJIrXHEEI5pRGtuAJoRkuek8qCYzQGRun4hBPJzDgs0WZBE4LRr6CVrjpljhi3CNQttOI6BGuFC3TgAT2LMSBha+0FI/S/OxIhMeMuPAGoex2YkCXklOes7bL/ttLqXR/1e96zdPWwC/AQDg322YxcCfW6oYYBfsKkxo2ltnSiJr4wv4NngXDgexJ1yhP5cMjPNaBINPyvnJcZadvHwRxB8ALdSgksy+vsJ5yogCUdp4pHovF2X1lQp0D0yEN5n3k+0FclPWjl9NFrecdDIRPbmdOY6Xw/tvw8ql3cg4hQjHG7mQPmrV6/2d+GfUsy4sCh4rdmj6+fG8GXzK4Hw3zZTHolWmtsa916y+I4A6wjvdkTVZH2OpQb1ZxJEybS4z9wsiEl2YJ8bV6nVCdJyizUEX1PQaIXa2eoRbpinXkmqqFIUJvRyIC/SAG6euHYUsGAUE17E2FzNT97AZfhQKof8+KMsZhQuE0Q9I44SzNrz+FHE/fQGUYKV6cRxI2KEUrDs5ZahSOxwxSrXHQfOooTUlHebmCKqjjLXJLv07VyGWKR/rMOCnPuJxJ54J5EqAc/kyHI9ftJii00YtgSgsojXJsAVT6fUcSFEeTMluv6EKMXwEsNAkMSaOrYjC8LDE4PtMbUnHFP9Mw/iBiRQshSOjAuRygBf9disEhaZXmBbnvmI6OuT2TSPdeNxMkR8lQMmmQBTwiNmqsK9eVOv7dUaGYkhGgxI0pM7w5o6v8AEetlCREdqymPMNn++W9Y/vVnsKV14QQX99qB3/BHvX23IhLgtiHJGDS0B7OQaEJXw/QJeAkAE04KkgDQW7pcrO3itDDzlffmjyIk7B0AZgEcMqINnviQYyXrkpkgcXT9M8KoajiJJq7CCzyBffMuHaC5AhGUVl78uMGeROQvMlRyH/b36Xl3PM8ZMVj5d6GlwvtAlUa7i58XwIC6Pyec3+SSwhJes+WECxcOgCLQ8Zb3Q7ycX+j654IWzHCwCqVXeL/TIkOiTrgLyYK5/Ft1gzLCz4wGFYQ6naoiOOPZyb06AaFxI4lIU+zCIYmze25XDhGPJDRWlDBqJwbL0oIZTYOuJnigI4lpqhLWCFFlLk8uAxSoDvdA/Q1Kpk18zG699YbkQcrPQ8YTti8FpJVgDP2tHbogX0GrlCHsu8NZaVm2+QAgk1ghdEZZBBjNY7tT4SL4EQ0a2Insb7VYWFuRVhCq+pWgHmCG44lkldWryoxxAXIwwdxpCWIAnSGGYiyEi44cf6FixO3Q9N56RW/A8wOmcJ3hVckiHruVXyQFkob1BlUvsv28fEwdrKpCEkQGl+zBAZmZJyOXnEkTw+8FkCP+bG9DlO1bkGK7jQiaucVIEDCwOICl0SGST/nn3uP2xfdz8tLP7Yu+zBrsWWregTnpH7ScUTwwZK9fYn+J258N6Ybu5q+K+y/XdWJGoelAmWRSE1k9lRAhrrf62aUmhr+U4qpSANR04U4C07znKkJky76yKhGcJ+GKedUPNwniWcsejwrPj4mdRy+9xhFw8x2z/U8PYaVR3do2Xr6uvGsaL3devqy9e1BvGXv3F6yr4ux3jVR376tC7u1Ov1z+vnmQ6m/x9TKlEdKZCwtfy5WWrp9GyGLgOWBaUKVYG/kK1mcl0TnNpERxHfllO8Q7e9WiVMN4y42ca4if2winBqMYLpUCjrZdRfv98MhfDK2JkWVom/C9HgTkcUHNMXLQISgtAYRlt4QxmpFld9qs/brTTg4nHnESJR5liRxAAhlFg8536Wt7CTrciur3w4SF60pHCrRl/vRyXFpacuvx0xaV+SfJQFDK1loVZoOXRGi3PwqK7BEv4zkfwcmJWxU1vltdJxhano9IRNRV+2iTHhS/B1mJoj6PAD1ien3QMfJFTy08s79HBxK3NigM1zGEi16HLtYthaR2eeXUvZbuwJ8A5TXhLL7eL5iL8iV7OlPct7DNGdY/GeDlVwoiHebB6h5LKv/S1lZfj8MQ61ZTkMqW3VkYuoY603nRuuvridoP0E1/cH+J8QD+5UAeAwZshahB+EL+BlFrFlLZwfGQFIf+5YtHAOEFWyMM7FX6JvmwvZNgVM0MsiZiuUvhAWF951K6xLKpOGpZRoQ22ipIkXDhwnEf+voVfG2DGCACwyT+rMwApctEngGQHl/wTWkTA5ELmAY9uGVRHccpSx9kwW+6iKOJNwTrBIjKmsmJjBGEsCGsykDWz6+dV1Bi1m7t4f1Esw2rkf3vBIVt1fPO2py+Dmrk7npYzBWjQh0SqvGCuLuY5FOXEglZeZD5Dfd+/dv070GkcWSy94rX4tCIuips+Ex8dri598FFikBEmQ8+1gWHr8KTTvez3zgGUXL7rnL0/f3t53j9uKlaRdVsT7PA+HR0IbOzTnLOiXfddp/vb5UGve3R5CmGvyfMKNgZIZvK1FcqBaUmosjBM+8bPGhb5gDT8mrnmJRapLFl7jubZxE5pbDlWbK0WnKd6NtEyqKyWnCN6PsE8xq0Wq0ieTWgSeatFSgItl6ry4CyMkf+by1gXW2tBlLkcLF6DgzItrNBneSB7kstivOc9KRDFj5lEgFZOAM+8rHnY/Pc2rord8pgtv7xc4qDW8H0ivT486A3IwXHnSe+HhED3fJ4PL4hnCHmN0A3TW9uXxVtbKQkp1LgbN4oBfVH/RvVCKmokuY9/pJupyJ/CmKjU7/hB1VouFOcAUc+VjpP/5EyuSP3FYAibZyjSGhsriPlohelP1ojBigs1a6rO5IESAWwLwzIMvKMPIccgM3mR+MRXMvJ3NKmVGLD7z/A91/cxfWmdK8z+FMGRtH1tSSEJ1FH2yyr+DawDOcgQFo6fjxaAr7peED8IgIx14tq88hiMRvzLyHStosSJysptn030gv3t1Nc2wPLJ/gUYf5yEORm//kr4F2pecK18mYRfQwCGDKBHaOBE5TxrQEd2fv2xQX4UGEpkHGK1R5DksDFNr33W+76Rf+CxiNpW/rjwv0kApvuWOQAA\n    path: /opt/azure/containers/configure-mesos-cluster.sh\n    permissions: \"0744\"\n -  encoding: gzip\n    content: !!binary |\n        H4sIADI2e1YC/+1XbW/bNhD+7l9x6AykSSHR7ZIhi7cGXdZhATok6NuGDZtAS2dbs0QKJOXEHbLfviMp2ZEtyw6QfJu/mNA99/Du+Oh4QqWkijI5AW0SVGrY6+EchdHwTw/odyPVDFUUSyEwNqkUGl4OXh0Pe3cEFHO4uHr/9upDdP3ph3eXF9Hl9Wcy9abGFJU/j2PU2m3A5lwxWjAxScUt85aQHgwdEpeRrAGdweMcMCt5VPB4xidI/2YKB/1C4Ti9ZRTlmJ2HBBgODyp0KuKsTBDyNMfQLArUfrsEx7zMTGQfAS+KLI25zY/J2KAJtFHI84pDo0jGaYYghXeeIRY8S+cYGaKVpYFvTipsWXhXyFHLuoqeRM1RQYac6hw669nJ4GTgGe/Wvbmi1KTYJMi5NkuC08HpFoJ4qqRoC6Dhf3w82BaAtUeJ2MVw+vLV1w2GCrTyylKCCzgdLGvuIcM13kjwHCGJpQ6PVjYlpQEmC8PcfsUUFZJ2DBWfWWxQpqzUqqq+20/6k4Tvga0fgmPEG5UahL+8tQ99HU8xxzPG+la50VTqajcGBaqcC3ohVhHdbe5Uo5sbFUreLihZE03docPPRAyrPYYt6IJrDRZB0XjS+xu35qgNLeOtSXpzZ5YesneyNfwpsq24dyZtX8ftB+usnSk7xN4ZV+inSNhTd+f7rz3GjJPin59/5xZp8vqPQfAtD768CX4P/nxxSIZSZa/Do8P+WpgUIBXCOvEkUXBwcO9Vsb9cKoxiaksqSkVR1tloeEMNujDBWxHLJBWT4TZ9ucAa0bDwiIpP8cCIesms1TMaLSLbyV1fdY3bEbnm3euuc/Xbo9ybTr8F75FnweU19BXmkuKwVdnX9yepbrhKMLEr6HsgEUS30bg22dXD+a6VNLIWbGsB7ktndZ57CIeaaxp76fhlUzwhqYedr/TTKh/vaE/08fVTxdcMia5x0hB7uIg82/8y6pTRvQNt20Nhkioa95Zyc42zPqj+UkYM2h7uz/hw910ubS8BNVrDE274mrJJLzSXmE0N1Xgvok5qN4HU+OYFQfMh152Ty9IPzR43XstEuDbNVIBt915l3nHpfQUfr368eh7nPJMCF4dn8AufIZgpwq84gk+X7pOAxmrgoMuRPxepFmFb4ZdbPvLNWfPuLNrmFNysWWXfUrLKuveYsMQ/bro17Q4tFrNJwUXCK42FozLNqPGOZTgusyz8W29ox7acKqQLTvkHF/RKKJnBMyGD2D551oytS9Nt++0WdctXRsuMbhFd45y1P2xW9x5PMNA54vUA7uhz+T8bxvzxag8AAA==\n    path: /opt/azure/containers/nginx.conf\n    permissions: \"0744\"\n\n')]",
                    "linuxConfiguration": "[variables('linuxConfiguration')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('osImagePublisher')]",
                        "offer": "[variables('osImageOffer')]",
                        "sku": "[variables('osImageSKU')]",
                        "version": "[variables('osImageVersion')]"
                    },
                    "osDisk": {
                        "name": "[concat(variables('masterVMNamePrefix'), copyIndex(),'-osdisk')]",
                        "vhd": {
                            "uri": "[concat('http://', variables('masterStorageAccountName'), '.blob.core.windows.net/vhds/', variables('masterVMNamePrefix'), copyIndex(), '-osdisk.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('masterVMNamePrefix'), 'nic-', copyIndex()))]"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('masterVMNamePrefix'), copyIndex(), '/configuremaster')]",
            "apiVersion": "2015-06-15",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "vmLoopNode",
                "count": "[variables('masterCount')]"
            },
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', variables('masterVMNamePrefix'), copyIndex())]"
            ],
            "properties": {
                "publisher": "Microsoft.OSTCExtensions",
                "type": "CustomScriptForLinux",
                "typeHandlerVersion": "1.3",
                "settings": {
                    "fileUris": [],
                    "commandToExecute": "[variables('masterCustomScript')]"
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('agentStorageAccountName')]",
            "apiVersion": "2015-06-15",
            "location": "[variables('storageLocation')]",
            "copy": {
                "name": "vmLoopNode",
                "count": "[variables('agentStorageAccountsCount')]"
            },
            "properties": {
                "accountType": "[variables('storageAccountType')]"
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('agentPublicIPAddressName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "[variables('agentEndpointDNSNamePrefix')]"
                }
            }
        },
        {
            "apiVersion": "2015-06-15",
            "name": "[variables('agentsLbName')]",
            "type": "Microsoft.Network/loadBalancers",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', variables('agentPublicIPAddressName'))]"
            ],
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "[variables('agentsLbIPConfigName')]",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('agentPublicIPAddressName'))]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [
                    {
                        "name": "[variables('agentsLbBackendPoolName')]"
                    }
                ],
                "loadBalancingRules": [
                    {
                        "name": "LBRuleHTTP",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('agentsLbIPConfigID')]"
                            },
                            "backendAddressPool": {
                                "id": "[concat(variables('agentsLbID'), '/backendAddressPools/', variables('agentsLbBackendPoolName'))]"
                            },
                            "protocol": "tcp",
                            "frontendPort": 80,
                            "backendPort": 80,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 5,
                            "loadDistribution": "Default",
                            "probe": {
                                "id": "[concat(variables('agentsLbID'),'/probes/tcpHTTPProbe')]"
                            }
                        }
                    },
                    {
                        "name": "LBRuleHTTPS",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('agentsLbIPConfigID')]"
                            },
                            "backendAddressPool": {
                                "id": "[concat(variables('agentsLbID'), '/backendAddressPools/', variables('agentsLbBackendPoolName'))]"
                            },
                            "protocol": "tcp",
                            "frontendPort": 443,
                            "backendPort": 443,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 5,
                            "loadDistribution": "Default",
                            "probe": {
                                "id": "[concat(variables('agentsLbID'),'/probes/tcpHTTPSProbe')]"
                            }
                        }
                    },
                    {
                        "name": "LBRulePort8080",
                        "properties": {
                            "frontendIPConfiguration": {
                                "id": "[variables('agentsLbIPConfigID')]"
                            },
                            "backendAddressPool": {
                                "id": "[concat(variables('agentsLbID'), '/backendAddressPools/', variables('agentsLbBackendPoolName'))]"
                            },
                            "protocol": "tcp",
                            "frontendPort": 8080,
                            "backendPort": 8080,
                            "enableFloatingIP": false,
                            "idleTimeoutInMinutes": 5,
                            "loadDistribution": "Default",
                            "probe": {
                                "id": "[concat(variables('agentsLbID'),'/probes/tcpPort8080Probe')]"
                            }
                        }
                    }
                ],
                "probes": [
                    {
                        "name": "tcpHTTPProbe",
                        "properties": {
                            "protocol": "tcp",
                            "port": 80,
                            "intervalInSeconds": "5",
                            "numberOfProbes": "2"
                        }
                    },
                    {
                        "name": "tcpHTTPSProbe",
                        "properties": {
                            "protocol": "tcp",
                            "port": 443,
                            "intervalInSeconds": "5",
                            "numberOfProbes": "2"
                        }
                    },
                    {
                        "name": "tcpPort8080Probe",
                        "properties": {
                            "protocol": "tcp",
                            "port": 8080,
                            "intervalInSeconds": "5",
                            "numberOfProbes": "2"
                        }
                    }
                ],
                "inboundNatRules": []
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('agentNSGName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [
                    {
                        "name": "http",
                        "properties": {
                            "description": "Allow HTTP",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 210,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "https",
                        "properties": {
                            "description": "Allow HTTPS",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "443",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 220,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "Tcp8080",
                        "properties": {
                            "description": "Allow port 8080",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "8080",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 230,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('agentVMNamePrefix'), 'nic-', copyIndex())]",
            "location": "[resourceGroup().location]",
            "copy": {
                "name": "nicLoopNode",
                "count": "[variables('agentCount')]"
            },
            "dependsOn": [
                "[variables('agentsLbID')]",
                "[variables('vnetID')]",
                "[variables('agentNSGID')]"
            ],
            "properties": {
                "networkSecurityGroup": {
                    "id": "[variables('agentNSGID')]"
                },
                "ipConfigurations": [
                    {
                        "name": "ipConfigNode",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[concat(split(variables('subnetPrefix'),'0.0/18')[0], div(copyIndex(),variables('agentsPerIPv4Octet')), '.', add(mod(copyIndex(),variables('agentsPerIPv4Octet')), variables('agentFirstAddr')))]",
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "loadBalancerBackendAddressPools": [
                                {
                                    "id": "[concat(variables('agentsLbID'), '/backendAddressPools/', variables('agentsLbBackendPoolName'))]"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachineScaleSets",
            "apiVersion": "2015-06-15",
            "name": "vmssAgents",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', variables('agentStorageAccountName'))]",
                "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
            ],
            "sku": {
                "name": "Standard_A2",
                "tier": "Standard",
                "capacity": "[variables('agentCount')]"
            },
            "properties": {
                "upgradePolicy": {
                    "mode": "Manual"
                },
                "virtualMachineProfile": {
                    "storageProfile": {
                        "osDisk": {
                            "vhdContainers": [
                                "[concat('https://', variables('agentStorageAccountName'), '.blob.core.windows.net/vmss1')]"
                            ],
                            "name": "vmssosdisk",
                            "caching": "ReadOnly",
                            "createOption": "FromImage"
                        },
                        "imageReference": {
                            "publisher": "[variables('osImagePublisher')]",
                            "offer": "[variables('osImageOffer')]",
                            "sku": "[variables('osImageSKU')]",
                            "version": "latest"
                        }
                    },
                    "osProfile": {
                        "computerNamePrefix": "mesos-agents",
                        "adminUsername": "[variables('adminUsername')]",
						 "customData": "[base64('#cloud-config\n\nwrite_files:\n -  encoding: gzip\n    content: !!binary |\n        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\n    path: /opt/azure/containers/configure-mesos-cluster.sh\n    permissions: \"0744\"\n -  encoding: gzip\n    content: !!binary |\n        H4sIADI2e1YC/+1XbW/bNhD+7l9x6AykSSHR7ZIhi7cGXdZhATok6NuGDZtAS2dbs0QKJOXEHbLfviMp2ZEtyw6QfJu/mNA99/Du+Oh4QqWkijI5AW0SVGrY6+EchdHwTw/odyPVDFUUSyEwNqkUGl4OXh0Pe3cEFHO4uHr/9upDdP3ph3eXF9Hl9Wcy9abGFJU/j2PU2m3A5lwxWjAxScUt85aQHgwdEpeRrAGdweMcMCt5VPB4xidI/2YKB/1C4Ti9ZRTlmJ2HBBgODyp0KuKsTBDyNMfQLArUfrsEx7zMTGQfAS+KLI25zY/J2KAJtFHI84pDo0jGaYYghXeeIRY8S+cYGaKVpYFvTipsWXhXyFHLuoqeRM1RQYac6hw669nJ4GTgGe/Wvbmi1KTYJMi5NkuC08HpFoJ4qqRoC6Dhf3w82BaAtUeJ2MVw+vLV1w2GCrTyylKCCzgdLGvuIcM13kjwHCGJpQ6PVjYlpQEmC8PcfsUUFZJ2DBWfWWxQpqzUqqq+20/6k4Tvga0fgmPEG5UahL+8tQ99HU8xxzPG+la50VTqajcGBaqcC3ohVhHdbe5Uo5sbFUreLihZE03docPPRAyrPYYt6IJrDRZB0XjS+xu35qgNLeOtSXpzZ5YesneyNfwpsq24dyZtX8ftB+usnSk7xN4ZV+inSNhTd+f7rz3GjJPin59/5xZp8vqPQfAtD768CX4P/nxxSIZSZa/Do8P+WpgUIBXCOvEkUXBwcO9Vsb9cKoxiaksqSkVR1tloeEMNujDBWxHLJBWT4TZ9ucAa0bDwiIpP8cCIesms1TMaLSLbyV1fdY3bEbnm3euuc/Xbo9ybTr8F75FnweU19BXmkuKwVdnX9yepbrhKMLEr6HsgEUS30bg22dXD+a6VNLIWbGsB7ktndZ57CIeaaxp76fhlUzwhqYedr/TTKh/vaE/08fVTxdcMia5x0hB7uIg82/8y6pTRvQNt20Nhkioa95Zyc42zPqj+UkYM2h7uz/hw910ubS8BNVrDE274mrJJLzSXmE0N1Xgvok5qN4HU+OYFQfMh152Ty9IPzR43XstEuDbNVIBt915l3nHpfQUfr368eh7nPJMCF4dn8AufIZgpwq84gk+X7pOAxmrgoMuRPxepFmFb4ZdbPvLNWfPuLNrmFNysWWXfUrLKuveYsMQ/bro17Q4tFrNJwUXCK42FozLNqPGOZTgusyz8W29ox7acKqQLTvkHF/RKKJnBMyGD2D551oytS9Nt++0WdctXRsuMbhFd45y1P2xW9x5PMNA54vUA7uhz+T8bxvzxag8AAA==\n    path: /opt/azure/containers/nginx.conf\n    permissions: \"0744\"\n\n')]",
                        "linuxConfiguration": {
                            "disablePasswordAuthentication": "true",
                            "ssh": {
                                "publicKeys": [
                                    {
                                        "path": "[variables('sshKeyPath')]",
                                        "keyData": "[parameters('sshRSAPublicKey')]"
                                    }
                                ]
                            }
                        }
                    },
                    "networkProfile": {
                        "networkInterfaceConfigurations": [
                            {
                                "name": "agentNodeNic",
                                "properties": {
                                    "primary": "true",
                                    "ipConfigurations": [
                                        {
                                            "name": "nicipconfig",
                                            "properties": {
                                                "subnet": {
                                                    "id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'), '/subnets/', variables('subnetName'))]"
                                                },
												"loadBalancerBackendAddressPools": [
														{
														"id": "[concat('/subscriptions/', subscription().subscriptionId,'/resourceGroups/', resourceGroup().name, '/providers/Microsoft.Network/loadBalancers/', variables('agentsLbName'), '/backendAddressPools/',variables('agentsLbBackendPoolName'))]"
													}
												]
                                            }
                                        }
                                    ]
                                }
                            }
                        ]
                    },
                    "extensionProfile": {
                        "extensions": [
                            {
                                "name": "mesos-agents-configureagent",
                                "properties": {
                                    "publisher": "Microsoft.OSTCExtensions",
                                    "type": "CustomScriptForLinux",
                                    "typeHandlerVersion": "1.3",
                                    "settings": {
                                        "fileUris": [],
                                        "commandToExecute": "[variables('agentCustomScript')]"
                                    }
                                }
                            }
                        ]
                    }
                }
            }
        }
    ],
    "outputs": {
        "masterFQDN": {
            "type": "string",
            "value": "[reference(concat('Microsoft.Network/publicIPAddresses/', variables('masterPublicIPAddressName'))).dnsSettings.fqdn]"
        },
        "agentFQDN": {
            "type": "string",
            "value": "[reference(concat('Microsoft.Network/publicIPAddresses/', variables('agentPublicIPAddressName'))).dnsSettings.fqdn]"
        }
    }
}